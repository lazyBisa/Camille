// This file is automatically generated.
// Do not directly edit.
// http://www.mingweisamuel.com/riotapi-schema/tool/
// Version {{= spec.info.version }}
// Generated on {{= (new Date).toUTCString() }}
{{
    const dotUtils = require('./dotUtils.js');
}}

using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Newtonsoft.Json;
using MingweiSamuel.Camille.Enums;
using MingweiSamuel.Camille.Endpoints;


namespace MingweiSamuel.Camille
{
{{
    const endpointGroups = {};
    for (let path of Object.entries(spec.paths)) {
        let ep = path[1]['x-endpoint'];
        endpointGroups[ep] = endpointGroups[ep] || [];
        endpointGroups[ep].push(path);
    }
}}
{{/* RiotApi Class */}}
    public partial class RiotApi
    {
{{
    for (let [ endpointName, endpointMethods ] of Object.entries(endpointGroups))
    {
        let endpoint = dotUtils.normalizeEndpointName(endpointName);
}}
        public readonly {{= endpoint }}Endpoints {{= endpoint }};
{{
    }
}}

        private RiotApi()
        {
{{
    for (let [ endpointName, endpointMethods ] of Object.entries(endpointGroups))
    {
        let endpoint = dotUtils.normalizeEndpointName(endpointName);
}}
            {{= endpoint }} = new {{= endpoint }}Endpoints(this);
{{
    }
}}
        }
    }
}